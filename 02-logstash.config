files:

  "/opt/elasticbeanstalk/hooks/eb-logstash-ecs-tasks-sumologic":
    mode: "000755"
    owner: root
    group: root
    content: |
      #!/bin/bash

      # Once the task started, it's ARN gets stored in a file by eb-ecs-mgr
      EB_CONFIG_ECS_TASK_ARN_FILE=$(/opt/elasticbeanstalk/bin/get-config container -k ecs_task_arn_file)
      CMD_GET_KNOWN_STATUS='curl -sS http://localhost:51678/v1/tasks?taskarn=$EB_CONFIG_ECS_TASK_ARN | jq -r .KnownStatus'

      start_logstash_monitoring(){
        # Waiting for ECS task to start
        local EB_CONFIG_ECS_TASK_ARN=$(cat $EB_CONFIG_ECS_TASK_ARN_FILE)
        # No timeout here we are optimistic that the the task will eventually be running
        while [ "`eval $CMD_GET_KNOWN_STATUS`" != "RUNNING" ]; do
          local EB_CONFIG_ECS_TASK_ARN=$(cat $EB_CONFIG_ECS_TASK_ARN_FILE)
          sleep 3
        done

        # The task is now running, let's do some cleanup first
        rm /etc/logstash/conf.d/docker*conf -f
        # Refresh containerIds
        instanceId=$( curl http://169.254.169.254/latest/meta-data/instance-id )
        # TODO                                                                                                                   XXX HERE XXX 
        curl -sS http://localhost:51678/v1/tasks?taskarn=$EB_CONFIG_ECS_TASK_ARN | jq '.Containers[] | select( .Name as $name |  ["containerName1", "conatainerNameN"] | contains( [$name] ) )| "name=\(.Name)  id=\(.DockerId)"' |
          while read match
          do
            local containerId=$(echo $match | sed 's/.*id=\([_[:alnum:]\\\-]\{12\}\).*/\1/g')
            local containerName=$(echo $match | sed 's/.*name=\([_[:alnum:]\\\-]*\).*/\1/g')
            sed -e 's/{{containerId}}/'"$containerId"'/g'  -e 's/{{containerName}}/'"$containerName"'/g' -e 's/{{instanceId}}/'"$instanceId"'/g' /var/app/current/config/logstash/logstash.docker.conf.tpl > /etc/logstash/conf.d/docker-$containerId.conf
          done
        start logstash
      }

      monitor_ecs_task() {
        local EB_CONFIG_ECS_TASK_ARN=$(cat $EB_CONFIG_ECS_TASK_ARN_FILE)
        while [ "`eval $CMD_GET_KNOWN_STATUS`" == "RUNNING" ]; do
          sleep 10
        done
      }
      stop_logstash_monitoring() {
        stop logstash
        rm /etc/logstash/conf.d/docker*conf -f
      }

      case "$1" in
        pre-start)
          start_logstash_monitoring
          ;;
        start)
          monitor_ecs_task
          ;;
        post-stop)
          stop_logstash_monitoring
          ;;
        *)
          echo "Usage: $0 {pre-start|start|post-stop}"
          exit 1
      esac


  "/etc/init/eb-logstash-ecs-tasks-sumologic.conf":
    mode: "000644"
    owner: root
    group: root
    content: |
      description "Logstash to sumologic for ecs docker containers"
      author "dmlf"

      start on started eb-ecs
      stop on stopping eb-ecs

      respawn

      pre-start exec /opt/elasticbeanstalk/hooks/eb-logstash-ecs-tasks-sumologic pre-start
      exec /opt/elasticbeanstalk/hooks/eb-logstash-ecs-tasks-sumologic start
      post-stop exec /opt/elasticbeanstalk/hooks/eb-logstash-ecs-tasks-sumologic post-stop

  "/etc/yum.repos.d/logstash.repo":
    mode: "000644"
    owner: root
    group: root
    content: |
      [logstash-5.x]
      name=Elastic repository for 5.x packages
      baseurl=https://artifacts.elastic.co/packages/5.x/yum
      gpgcheck=1
      gpgkey=https://artifacts.elastic.co/GPG-KEY-elasticsearch
      enabled=1
      autorefresh=1
      type=rpm-md


  "/opt/elasticbeanstalk/hooks/appdeploy/post/97_generate_docker_logstash_conf.sh":
    mode: "000755"
    owner: root
    group: root
    content: |
        #!/usr/bin/env bash

        EB_CONFIG_ECS_TASK_ARN_FILE=$(/opt/elasticbeanstalk/bin/get-config container -k ecs_task_arn_file)
        EB_CONFIG_ECS_TASK_ARN=$(cat $EB_CONFIG_ECS_TASK_ARN_FILE)

        rm /etc/logstash/conf.d/docker*conf -f
        instanceId=$( curl http://169.254.169.254/latest/meta-data/instance-id )
        # TODO                                                                                                                   XXX HERE XXX 
        curl -sS http://localhost:51678/v1/tasks?taskarn=$EB_CONFIG_ECS_TASK_ARN | jq '.Containers[] | select( .Name as $name |  ["containerName1", "conatainerNameN"] | contains( [$name] ) )| "name=\(.Name)  id=\(.DockerId)"' |
        while read match
        do
            containerId=$(echo $match | sed 's/.*id=\([_[:alnum:]\\\-]\{12\}\).*/\1/g')
            containerName=$(echo $match | sed 's/.*name=\([_[:alnum:]\\\-]*\).*/\1/g')
            sed -e 's/{{containerId}}/'"$containerId"'/g'  -e 's/{{containerName}}/'"$containerName"'/g' -e 's/{{instanceId}}/'"$instanceId"'/g' /var/app/current/config/logstash/logstash.docker.conf.tpl > /etc/logstash/conf.d/docker-$containerId.conf
        done
        true

  "/opt/elasticbeanstalk/hooks/appdeploy/post/98_install_sumologic_logstash_ouput_plugin.sh":
    mode: "000755"
    owner: root
    group: root
    content: |
        #!/usr/bin/env bash
        /usr/share/logstash/bin/logstash-plugin  install /var/app/current/config/logstash/logstash-output-sumologic-1.0.4.gem
        true

  "/opt/elasticbeanstalk/hooks/appdeploy/post/99_start_docker_logstash.sh":
    mode: "000755"
    owner: root
    group: root
    content: |
        #!/usr/bin/env bash
        restart logstash
        true

container_commands:
  100-import-public-sign-key:
    command: rpm --import https://artifacts.elastic.co/GPG-KEY-elasticsearch
  110-install-logstash:
    command: "yum -y install logstash"
  210-install-jre8:
    command: "yum install -y java-1.8.0-openjdk-headless"
  220-update-logstash-startup-options:
    command: "cp /var/app/staging/config/logstash/startup.options /etc/logstash/"
  221-update-logstash-init-script:
    command: "/usr/share/logstash/bin/system-install"
